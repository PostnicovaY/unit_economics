import math
def func(unknown_variable, FV = 1, PV = 1, i = 1, n = 1, k = 1, ef = 1):
    # Вычисление недостающей переменной
    if unknown_variable == "FV":
        FV = round(PV * (1 + i/k)**(k*n))
        print(f"Недостающая переменная (FV) = {FV}")
        return FV
    elif unknown_variable == "PV":
        PV = round(FV / ((1 + i/k)**(k*n)), 2)
        print(f"Недостающая переменная (PV) = {PV}")
        return PV
    elif unknown_variable == "i":
        i = k * (((FV / PV)**(1/(k*n))) - 1)
        print(f"Недостающая переменная (i) = {round(i*100, 2)}%")
        return i
    elif unknown_variable == "n":
        n = (1 / (k * math.log(FV / PV))) / math.log(1 + i/k)
        print(f"Недостающая переменная (n) = {n}")
        return n
    elif unknown_variable == "ef":
        ef = (1+i/k)**k-1
        print(f"Недостающая переменная (ef) = {round(ef*100, 2)}%")
        return ef
    else:
        k = n / (math.log(FV / PV) / (math.log(1 + i/k)))
        print(f"Недостающая переменная (k) = {k}")
        return k
    


# Задача 1. Есть инвестиционный проект с денежными потоками по кварталам:
# Квартал 0 1 2 3 4 5
# денежный поток -1200 100 200 300 400 500
# Необходимо принять решение, инвестируем в проект или нет, если ставка 
# дисконтирования 15% годовых.
# pv0 = func("PV", FV = -1200, i = 0.0375, n = 0)
# pv1 = func("PV", FV = 100, i = 0.0375, n = 1)
# pv2 = func("PV", FV = 200, i = 0.0375, n = 2)
# pv3 = func("PV", FV = 300, i = 0.0375, n = 3)
# pv4 = func("PV", FV = 400, i = 0.0375, n = 4)
# pv5 = func("PV", FV = 500, i = 0.0375, n = 5)
# NPV = pv0 + pv1 + pv2 + pv3 + pv4 + pv5

# if NPV >= 1200:
#     print(f"Присутственная стоимость: {NPV:.2f}. Инвестиция в проект рекомендуется.")
# else:
#     print(f"Присутственная стоимость: {NPV:.2f}. Инвестиция в проект не рекомендуется.")

##########################################################################
# Задача 2. Для инвестиционного проекта с денежными потоками:
# Год 0 1 2 3 4 5 6
# денежный поток -1500 100 200 300 400 500 600
# найти NPV, если первые два года ставка дисконтирования равна 20%, 
# следующие два года она равна 15%, и затем становится 10%.

# pv0 = func("PV", FV = -1500, i = 0.2, n = 0)
# pv1 = func("PV", FV = 100, i = 0.2, n = 1)
# pv2 = func("PV", FV = 200, i = 0.2, n = 2)
# pv3 = func("PV", FV = 300, i = 0.15, n = 3)
# pv4 = func("PV", FV = 400, i = 0.15, n = 4)
# pv5 = func("PV", FV = 500, i = 0.1, n = 5)
# pv6 = func("PV", FV = 600, i = 0.1, n = 6)
# nvp = pv0 + pv1 + pv2 + pv3 + pv4 + pv5 + pv6

# print(f"Присутственная стоимость: {nvp:.2f}.")

##########################################################################
# Задача 3. Для проекта из задачи 2 найти внутреннюю норму доходности.

# cash_flows = [-1500, 100, 200, 300, 400, 500, 600]

# def irr_formula(rate, cash_flows):
#     return sum([cf / (1 + rate)**t for t, cf in enumerate(cash_flows)])

# # Используем метод Ньютона для приближенного нахождения IRR
# def irr_newton(cash_flows):
#     rate = 0.1  # Начальное предположение
#     epsilon = 0.00001  # Точность

#     while True:
#         f_value = irr_formula(rate, cash_flows)
#         f_derivative = sum([-t * cf / (1 + rate)**(t+1) for t, cf in enumerate(cash_flows)])
#         new_rate = rate - f_value / f_derivative

#         if abs(new_rate - rate) < epsilon:
#             return new_rate

#         rate = new_rate

# # Рассчитываем IRR
# irr = irr_newton(cash_flows)
# print(f'Внутренняя норма доходности (IRR): {irr:.2%}')

##########################################################################
# Задача 4. Есть два инвестиционных проекта со следующими денежными потоками:
# Год 0 1 2 3 4 5
# Проект А -1000 100 250 450 500 550
# Проект Б -1000 200 300 400 450 500
# Если стоимость денег равна 10%, и инвестор хочет получить максимальную 
# доходность на вложенный рубль инвестиций, то какой проект он должен выбрать?

pv1_0 = func("PV", FV = -1000, i = 0.1, n = 0)
pv1_1 = func("PV", FV = 100, i = 0.1, n = 1)
pv1_2 = func("PV", FV = 250, i = 0.1, n = 2)
pv1_3 = func("PV", FV = 450, i = 0.1, n = 3)
pv1_4 = func("PV", FV = 500, i = 0.1, n = 4)
pv1_5 = func("PV", FV = 550, i = 0.1, n = 5)
NPV1 = pv1_0 + pv1_1 + pv1_2 + pv1_3 + pv1_4 + pv1_5
print(f'NPV1 = {NPV1:.2f}')
pv2_0 = func("PV", FV = -1000, i = 0.1, n = 0)
pv2_1 = func("PV", FV = 200, i = 0.1, n = 1)
pv2_2 = func("PV", FV = 300, i = 0.1, n = 2)
pv2_3 = func("PV", FV = 400, i = 0.1, n = 3)
pv2_4 = func("PV", FV = 450, i = 0.1, n = 4)
pv2_5 = func("PV", FV = 500, i = 0.1, n = 5)
NPV2 = pv2_0 + pv2_1 + pv2_2 + pv2_3 + pv2_4 + pv2_5
print(f'NPV2 = {NPV2:.2f}')
if NPV1 > NPV2:
    print(f'Инвестор должен выбрать проект 1 с NPV = {NPV1:.2f}')
elif NPV2 > NPV1:
    print(f'Инвестор должен выбрать проект 2 с NPV = {NPV2:.2f}')
else:
    print('Проекты имеют одинаковую NPV, инвестор может выбрать любой из них.')

##########################################################################
# Задача 5. Есть два инвестиционных проекта со следующими денежными потоками:
# Год 0 1 2 3 4 5
# Проект А -1000 100 250 450 500 550
# Проект Б -1000 200 300 400 450 500
# Инвестор хочет выбрать один из проектов по критерию ликвидности с учетом 
# временной стоимости денег в размере 10% годовых. Какой он должен выбрать?

index_1 = 1000/NPV1
print(f'Критерий ликвидности первого проекта = {index_1:.2f}')
index_2 = 1000/NPV2
print(f'Критерий ликвидности второго проекта = {index_2:.2f}')
if index_1 > index_2:
    print(f'Инвестор должен выбрать проект 1 = {index_1:.2f}')
elif index_2 > index_1:
    print(f'Инвестор должен выбрать проект 2 = {index_2:.2f}')
else:
    print('Проекты имеют одинаковую NPV, инвестор может выбрать любой из них.')